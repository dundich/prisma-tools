scalar DateTime

type BatchPayload {
  count: Int!
}

enum UserScalarFieldEnum {
  id
  createdAt
  email
  name
  password
  groupId
}

enum PostScalarFieldEnum {
  id
  published
  title
  authorId
  createdAt
  updatedAt
}

enum CommentScalarFieldEnum {
  id
  contain
  postId
  authorId
  createdAt
  updatedAt
}

enum GroupScalarFieldEnum {
  id
  name
  createdAt
  updatedAt
}

enum SortOrder {
  asc
  desc
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: IntFilter
  createdAt: DateTimeFilter
  email: StringFilter
  name: StringNullableFilter
  password: StringFilter
  posts: PostListRelationFilter
  group: GroupWhereInput
  groupId: IntNullableFilter
  comments: CommentListRelationFilter
}

input UserOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  email: SortOrder
  name: SortOrder
  password: SortOrder
  group: GroupOrderByInput
  groupId: SortOrder
}

input UserWhereUniqueInput {
  id: Int
  email: String
}

input PostWhereInput {
  AND: [PostWhereInput!]
  OR: [PostWhereInput!]
  NOT: [PostWhereInput!]
  id: IntFilter
  published: BoolFilter
  title: StringFilter
  author: UserWhereInput
  authorId: IntNullableFilter
  comments: CommentListRelationFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input PostOrderByInput {
  id: SortOrder
  published: SortOrder
  title: SortOrder
  author: UserOrderByInput
  authorId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input PostWhereUniqueInput {
  id: Int
}

input CommentWhereInput {
  AND: [CommentWhereInput!]
  OR: [CommentWhereInput!]
  NOT: [CommentWhereInput!]
  id: IntFilter
  contain: StringFilter
  post: PostWhereInput
  postId: IntFilter
  author: UserWhereInput
  authorId: IntNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input CommentOrderByInput {
  id: SortOrder
  contain: SortOrder
  post: PostOrderByInput
  postId: SortOrder
  author: UserOrderByInput
  authorId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input CommentWhereUniqueInput {
  id: Int
}

input GroupWhereInput {
  AND: [GroupWhereInput!]
  OR: [GroupWhereInput!]
  NOT: [GroupWhereInput!]
  id: IntFilter
  name: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  users: UserListRelationFilter
}

input GroupOrderByInput {
  id: SortOrder
  name: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input GroupWhereUniqueInput {
  id: Int
}

input UserCreateInput {
  createdAt: DateTime
  email: String!
  name: String
  password: String!
  posts: PostCreateNestedManyWithoutAuthorInput
  group: GroupCreateNestedOneWithoutUsersInput
  comments: CommentCreateNestedManyWithoutAuthorInput
}

input UserUncheckedCreateInput {
  id: Int
  createdAt: DateTime
  email: String!
  name: String
  password: String!
  groupId: Int
  posts: PostUncheckedCreateNestedManyWithoutAuthorInput
  comments: CommentUncheckedCreateNestedManyWithoutAuthorInput
}

input UserUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  posts: PostUpdateManyWithoutAuthorInput
  group: GroupUpdateOneWithoutUsersInput
  comments: CommentUpdateManyWithoutAuthorInput
}

input UserUncheckedUpdateInput {
  id: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  groupId: NullableIntFieldUpdateOperationsInput
  posts: PostUncheckedUpdateManyWithoutAuthorInput
  comments: CommentUncheckedUpdateManyWithoutAuthorInput
}

input UserUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
}

input UserUncheckedUpdateManyInput {
  id: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  groupId: NullableIntFieldUpdateOperationsInput
}

input PostCreateInput {
  published: Boolean
  title: String!
  createdAt: DateTime
  updatedAt: DateTime
  author: UserCreateNestedOneWithoutPostsInput
  comments: CommentCreateNestedManyWithoutPostInput
}

input PostUncheckedCreateInput {
  id: Int
  published: Boolean
  title: String!
  authorId: Int
  createdAt: DateTime
  updatedAt: DateTime
  comments: CommentUncheckedCreateNestedManyWithoutPostInput
}

input PostUpdateInput {
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  author: UserUpdateOneWithoutPostsInput
  comments: CommentUpdateManyWithoutPostInput
}

input PostUncheckedUpdateInput {
  id: IntFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  authorId: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  comments: CommentUncheckedUpdateManyWithoutPostInput
}

input PostUpdateManyMutationInput {
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PostUncheckedUpdateManyInput {
  id: IntFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  authorId: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentCreateInput {
  contain: String!
  createdAt: DateTime
  updatedAt: DateTime
  post: PostCreateNestedOneWithoutCommentsInput!
  author: UserCreateNestedOneWithoutCommentsInput
}

input CommentUncheckedCreateInput {
  id: Int
  contain: String!
  postId: Int!
  authorId: Int
  createdAt: DateTime
  updatedAt: DateTime
}

input CommentUpdateInput {
  contain: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  post: PostUpdateOneRequiredWithoutCommentsInput
  author: UserUpdateOneWithoutCommentsInput
}

input CommentUncheckedUpdateInput {
  id: IntFieldUpdateOperationsInput
  contain: StringFieldUpdateOperationsInput
  postId: IntFieldUpdateOperationsInput
  authorId: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUpdateManyMutationInput {
  contain: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUncheckedUpdateManyInput {
  id: IntFieldUpdateOperationsInput
  contain: StringFieldUpdateOperationsInput
  postId: IntFieldUpdateOperationsInput
  authorId: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input GroupCreateInput {
  name: String!
  createdAt: DateTime
  updatedAt: DateTime
  users: UserCreateNestedManyWithoutGroupInput
}

input GroupUncheckedCreateInput {
  id: Int
  name: String!
  createdAt: DateTime
  updatedAt: DateTime
  users: UserUncheckedCreateNestedManyWithoutGroupInput
}

input GroupUpdateInput {
  name: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutGroupInput
}

input GroupUncheckedUpdateInput {
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUncheckedUpdateManyWithoutGroupInput
}

input GroupUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input GroupUncheckedUpdateManyInput {
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input DateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input PostListRelationFilter {
  every: PostWhereInput
  some: PostWhereInput
  none: PostWhereInput
}

input GroupRelationFilter {
  is: GroupWhereInput
  isNot: GroupWhereInput
}

input IntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableFilter
}

input CommentListRelationFilter {
  every: CommentWhereInput
  some: CommentWhereInput
  none: CommentWhereInput
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

input PostRelationFilter {
  is: PostWhereInput
  isNot: PostWhereInput
}

input UserListRelationFilter {
  every: UserWhereInput
  some: UserWhereInput
  none: UserWhereInput
}

input PostCreateNestedManyWithoutAuthorInput {
  create: [PostCreateWithoutAuthorInput!]
  connectOrCreate: [PostCreateOrConnectWithoutauthorInput!]
  connect: [PostWhereUniqueInput!]
}

input GroupCreateNestedOneWithoutUsersInput {
  create: GroupUncheckedCreateWithoutUsersInput
  connectOrCreate: GroupCreateOrConnectWithoutusersInput
  connect: GroupWhereUniqueInput
}

input CommentCreateNestedManyWithoutAuthorInput {
  create: [CommentCreateWithoutAuthorInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutauthorInput!]
  connect: [CommentWhereUniqueInput!]
}

input PostUncheckedCreateNestedManyWithoutAuthorInput {
  create: [PostCreateWithoutAuthorInput!]
  connectOrCreate: [PostCreateOrConnectWithoutauthorInput!]
  connect: [PostWhereUniqueInput!]
}

input CommentUncheckedCreateNestedManyWithoutAuthorInput {
  create: [CommentCreateWithoutAuthorInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutauthorInput!]
  connect: [CommentWhereUniqueInput!]
}

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input StringFieldUpdateOperationsInput {
  set: String
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

input PostUpdateManyWithoutAuthorInput {
  create: [PostCreateWithoutAuthorInput!]
  connectOrCreate: [PostCreateOrConnectWithoutauthorInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]
  connect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  disconnect: [PostWhereUniqueInput!]
  delete: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [PostUpdateManyWithWhereWithoutAuthorInput!]
  deleteMany: [PostScalarWhereInput!]
}

input GroupUpdateOneWithoutUsersInput {
  create: GroupUncheckedCreateWithoutUsersInput
  connectOrCreate: GroupCreateOrConnectWithoutusersInput
  upsert: GroupUpsertWithoutUsersInput
  connect: GroupWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: GroupUncheckedUpdateWithoutUsersInput
}

input CommentUpdateManyWithoutAuthorInput {
  create: [CommentCreateWithoutAuthorInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutauthorInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutAuthorInput!]
  connect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  disconnect: [CommentWhereUniqueInput!]
  delete: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [CommentUpdateManyWithWhereWithoutAuthorInput!]
  deleteMany: [CommentScalarWhereInput!]
}

input IntFieldUpdateOperationsInput {
  set: Int
  increment: Int
  decrement: Int
  multiply: Int
  divide: Int
}

input NullableIntFieldUpdateOperationsInput {
  set: Int
  increment: Int
  decrement: Int
  multiply: Int
  divide: Int
}

input PostUncheckedUpdateManyWithoutAuthorInput {
  create: [PostCreateWithoutAuthorInput!]
  connectOrCreate: [PostCreateOrConnectWithoutauthorInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]
  connect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  disconnect: [PostWhereUniqueInput!]
  delete: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [PostUpdateManyWithWhereWithoutAuthorInput!]
  deleteMany: [PostScalarWhereInput!]
}

input CommentUncheckedUpdateManyWithoutAuthorInput {
  create: [CommentCreateWithoutAuthorInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutauthorInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutAuthorInput!]
  connect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  disconnect: [CommentWhereUniqueInput!]
  delete: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [CommentUpdateManyWithWhereWithoutAuthorInput!]
  deleteMany: [CommentScalarWhereInput!]
}

input UserCreateNestedOneWithoutPostsInput {
  create: UserUncheckedCreateWithoutPostsInput
  connectOrCreate: UserCreateOrConnectWithoutpostsInput
  connect: UserWhereUniqueInput
}

input CommentCreateNestedManyWithoutPostInput {
  create: [CommentCreateWithoutPostInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutpostInput!]
  connect: [CommentWhereUniqueInput!]
}

input CommentUncheckedCreateNestedManyWithoutPostInput {
  create: [CommentCreateWithoutPostInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutpostInput!]
  connect: [CommentWhereUniqueInput!]
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input UserUpdateOneWithoutPostsInput {
  create: UserUncheckedCreateWithoutPostsInput
  connectOrCreate: UserCreateOrConnectWithoutpostsInput
  upsert: UserUpsertWithoutPostsInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUncheckedUpdateWithoutPostsInput
}

input CommentUpdateManyWithoutPostInput {
  create: [CommentCreateWithoutPostInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutpostInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutPostInput!]
  connect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  disconnect: [CommentWhereUniqueInput!]
  delete: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutPostInput!]
  updateMany: [CommentUpdateManyWithWhereWithoutPostInput!]
  deleteMany: [CommentScalarWhereInput!]
}

input CommentUncheckedUpdateManyWithoutPostInput {
  create: [CommentCreateWithoutPostInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutpostInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutPostInput!]
  connect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  disconnect: [CommentWhereUniqueInput!]
  delete: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutPostInput!]
  updateMany: [CommentUpdateManyWithWhereWithoutPostInput!]
  deleteMany: [CommentScalarWhereInput!]
}

input PostCreateNestedOneWithoutCommentsInput {
  create: PostUncheckedCreateWithoutCommentsInput
  connectOrCreate: PostCreateOrConnectWithoutcommentsInput
  connect: PostWhereUniqueInput
}

input UserCreateNestedOneWithoutCommentsInput {
  create: UserUncheckedCreateWithoutCommentsInput
  connectOrCreate: UserCreateOrConnectWithoutcommentsInput
  connect: UserWhereUniqueInput
}

input PostUpdateOneRequiredWithoutCommentsInput {
  create: PostUncheckedCreateWithoutCommentsInput
  connectOrCreate: PostCreateOrConnectWithoutcommentsInput
  upsert: PostUpsertWithoutCommentsInput
  connect: PostWhereUniqueInput
  update: PostUncheckedUpdateWithoutCommentsInput
}

input UserUpdateOneWithoutCommentsInput {
  create: UserUncheckedCreateWithoutCommentsInput
  connectOrCreate: UserCreateOrConnectWithoutcommentsInput
  upsert: UserUpsertWithoutCommentsInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUncheckedUpdateWithoutCommentsInput
}

input UserCreateNestedManyWithoutGroupInput {
  create: [UserCreateWithoutGroupInput!]
  connectOrCreate: [UserCreateOrConnectWithoutgroupInput!]
  connect: [UserWhereUniqueInput!]
}

input UserUncheckedCreateNestedManyWithoutGroupInput {
  create: [UserCreateWithoutGroupInput!]
  connectOrCreate: [UserCreateOrConnectWithoutgroupInput!]
  connect: [UserWhereUniqueInput!]
}

input UserUpdateManyWithoutGroupInput {
  create: [UserCreateWithoutGroupInput!]
  connectOrCreate: [UserCreateOrConnectWithoutgroupInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutGroupInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutGroupInput!]
  updateMany: [UserUpdateManyWithWhereWithoutGroupInput!]
  deleteMany: [UserScalarWhereInput!]
}

input UserUncheckedUpdateManyWithoutGroupInput {
  create: [UserCreateWithoutGroupInput!]
  connectOrCreate: [UserCreateOrConnectWithoutgroupInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutGroupInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutGroupInput!]
  updateMany: [UserUpdateManyWithWhereWithoutGroupInput!]
  deleteMany: [UserScalarWhereInput!]
}

input NestedIntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input NestedStringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input NestedIntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableFilter
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input PostCreateWithoutAuthorInput {
  published: Boolean
  title: String!
  createdAt: DateTime
  updatedAt: DateTime
  comments: CommentCreateNestedManyWithoutPostInput
}

input PostUncheckedCreateWithoutAuthorInput {
  id: Int
  published: Boolean
  title: String!
  createdAt: DateTime
  updatedAt: DateTime
  comments: CommentUncheckedCreateNestedManyWithoutPostInput
}

input PostCreateOrConnectWithoutauthorInput {
  where: PostWhereUniqueInput!
  create: PostUncheckedCreateWithoutAuthorInput!
}

input GroupCreateWithoutUsersInput {
  name: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input GroupUncheckedCreateWithoutUsersInput {
  id: Int
  name: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input GroupCreateOrConnectWithoutusersInput {
  where: GroupWhereUniqueInput!
  create: GroupUncheckedCreateWithoutUsersInput!
}

input CommentCreateWithoutAuthorInput {
  contain: String!
  createdAt: DateTime
  updatedAt: DateTime
  post: PostCreateNestedOneWithoutCommentsInput!
}

input CommentUncheckedCreateWithoutAuthorInput {
  id: Int
  contain: String!
  postId: Int!
  createdAt: DateTime
  updatedAt: DateTime
}

input CommentCreateOrConnectWithoutauthorInput {
  where: CommentWhereUniqueInput!
  create: CommentUncheckedCreateWithoutAuthorInput!
}

input PostUpsertWithWhereUniqueWithoutAuthorInput {
  where: PostWhereUniqueInput!
  update: PostUncheckedUpdateWithoutAuthorInput!
  create: PostUncheckedCreateWithoutAuthorInput!
}

input PostUpdateWithWhereUniqueWithoutAuthorInput {
  where: PostWhereUniqueInput!
  data: PostUncheckedUpdateWithoutAuthorInput!
}

input PostUpdateManyWithWhereWithoutAuthorInput {
  where: PostScalarWhereInput!
  data: PostUncheckedUpdateManyWithoutPostsInput!
}

input PostScalarWhereInput {
  AND: [PostScalarWhereInput!]
  OR: [PostScalarWhereInput!]
  NOT: [PostScalarWhereInput!]
  id: IntFilter
  published: BoolFilter
  title: StringFilter
  authorId: IntNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input GroupUpsertWithoutUsersInput {
  update: GroupUncheckedUpdateWithoutUsersInput!
  create: GroupUncheckedCreateWithoutUsersInput!
}

input GroupUpdateWithoutUsersInput {
  name: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input GroupUncheckedUpdateWithoutUsersInput {
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUpsertWithWhereUniqueWithoutAuthorInput {
  where: CommentWhereUniqueInput!
  update: CommentUncheckedUpdateWithoutAuthorInput!
  create: CommentUncheckedCreateWithoutAuthorInput!
}

input CommentUpdateWithWhereUniqueWithoutAuthorInput {
  where: CommentWhereUniqueInput!
  data: CommentUncheckedUpdateWithoutAuthorInput!
}

input CommentUpdateManyWithWhereWithoutAuthorInput {
  where: CommentScalarWhereInput!
  data: CommentUncheckedUpdateManyWithoutCommentsInput!
}

input CommentScalarWhereInput {
  AND: [CommentScalarWhereInput!]
  OR: [CommentScalarWhereInput!]
  NOT: [CommentScalarWhereInput!]
  id: IntFilter
  contain: StringFilter
  postId: IntFilter
  authorId: IntNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input UserCreateWithoutPostsInput {
  createdAt: DateTime
  email: String!
  name: String
  password: String!
  group: GroupCreateNestedOneWithoutUsersInput
  comments: CommentCreateNestedManyWithoutAuthorInput
}

input UserUncheckedCreateWithoutPostsInput {
  id: Int
  createdAt: DateTime
  email: String!
  name: String
  password: String!
  groupId: Int
  comments: CommentUncheckedCreateNestedManyWithoutAuthorInput
}

input UserCreateOrConnectWithoutpostsInput {
  where: UserWhereUniqueInput!
  create: UserUncheckedCreateWithoutPostsInput!
}

input CommentCreateWithoutPostInput {
  contain: String!
  createdAt: DateTime
  updatedAt: DateTime
  author: UserCreateNestedOneWithoutCommentsInput
}

input CommentUncheckedCreateWithoutPostInput {
  id: Int
  contain: String!
  authorId: Int
  createdAt: DateTime
  updatedAt: DateTime
}

input CommentCreateOrConnectWithoutpostInput {
  where: CommentWhereUniqueInput!
  create: CommentUncheckedCreateWithoutPostInput!
}

input UserUpsertWithoutPostsInput {
  update: UserUncheckedUpdateWithoutPostsInput!
  create: UserUncheckedCreateWithoutPostsInput!
}

input UserUpdateWithoutPostsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  group: GroupUpdateOneWithoutUsersInput
  comments: CommentUpdateManyWithoutAuthorInput
}

input UserUncheckedUpdateWithoutPostsInput {
  id: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  groupId: NullableIntFieldUpdateOperationsInput
  comments: CommentUncheckedUpdateManyWithoutAuthorInput
}

input CommentUpsertWithWhereUniqueWithoutPostInput {
  where: CommentWhereUniqueInput!
  update: CommentUncheckedUpdateWithoutPostInput!
  create: CommentUncheckedCreateWithoutPostInput!
}

input CommentUpdateWithWhereUniqueWithoutPostInput {
  where: CommentWhereUniqueInput!
  data: CommentUncheckedUpdateWithoutPostInput!
}

input CommentUpdateManyWithWhereWithoutPostInput {
  where: CommentScalarWhereInput!
  data: CommentUncheckedUpdateManyWithoutCommentsInput!
}

input PostCreateWithoutCommentsInput {
  published: Boolean
  title: String!
  createdAt: DateTime
  updatedAt: DateTime
  author: UserCreateNestedOneWithoutPostsInput
}

input PostUncheckedCreateWithoutCommentsInput {
  id: Int
  published: Boolean
  title: String!
  authorId: Int
  createdAt: DateTime
  updatedAt: DateTime
}

input PostCreateOrConnectWithoutcommentsInput {
  where: PostWhereUniqueInput!
  create: PostUncheckedCreateWithoutCommentsInput!
}

input UserCreateWithoutCommentsInput {
  createdAt: DateTime
  email: String!
  name: String
  password: String!
  posts: PostCreateNestedManyWithoutAuthorInput
  group: GroupCreateNestedOneWithoutUsersInput
}

input UserUncheckedCreateWithoutCommentsInput {
  id: Int
  createdAt: DateTime
  email: String!
  name: String
  password: String!
  groupId: Int
  posts: PostUncheckedCreateNestedManyWithoutAuthorInput
}

input UserCreateOrConnectWithoutcommentsInput {
  where: UserWhereUniqueInput!
  create: UserUncheckedCreateWithoutCommentsInput!
}

input PostUpsertWithoutCommentsInput {
  update: PostUncheckedUpdateWithoutCommentsInput!
  create: PostUncheckedCreateWithoutCommentsInput!
}

input PostUpdateWithoutCommentsInput {
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  author: UserUpdateOneWithoutPostsInput
}

input PostUncheckedUpdateWithoutCommentsInput {
  id: IntFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  authorId: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpsertWithoutCommentsInput {
  update: UserUncheckedUpdateWithoutCommentsInput!
  create: UserUncheckedCreateWithoutCommentsInput!
}

input UserUpdateWithoutCommentsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  posts: PostUpdateManyWithoutAuthorInput
  group: GroupUpdateOneWithoutUsersInput
}

input UserUncheckedUpdateWithoutCommentsInput {
  id: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  groupId: NullableIntFieldUpdateOperationsInput
  posts: PostUncheckedUpdateManyWithoutAuthorInput
}

input UserCreateWithoutGroupInput {
  createdAt: DateTime
  email: String!
  name: String
  password: String!
  posts: PostCreateNestedManyWithoutAuthorInput
  comments: CommentCreateNestedManyWithoutAuthorInput
}

input UserUncheckedCreateWithoutGroupInput {
  id: Int
  createdAt: DateTime
  email: String!
  name: String
  password: String!
  posts: PostUncheckedCreateNestedManyWithoutAuthorInput
  comments: CommentUncheckedCreateNestedManyWithoutAuthorInput
}

input UserCreateOrConnectWithoutgroupInput {
  where: UserWhereUniqueInput!
  create: UserUncheckedCreateWithoutGroupInput!
}

input UserUpsertWithWhereUniqueWithoutGroupInput {
  where: UserWhereUniqueInput!
  update: UserUncheckedUpdateWithoutGroupInput!
  create: UserUncheckedCreateWithoutGroupInput!
}

input UserUpdateWithWhereUniqueWithoutGroupInput {
  where: UserWhereUniqueInput!
  data: UserUncheckedUpdateWithoutGroupInput!
}

input UserUpdateManyWithWhereWithoutGroupInput {
  where: UserScalarWhereInput!
  data: UserUncheckedUpdateManyWithoutUsersInput!
}

input UserScalarWhereInput {
  AND: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  NOT: [UserScalarWhereInput!]
  id: IntFilter
  createdAt: DateTimeFilter
  email: StringFilter
  name: StringNullableFilter
  password: StringFilter
  groupId: IntNullableFilter
}

input PostUpdateWithoutAuthorInput {
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  comments: CommentUpdateManyWithoutPostInput
}

input PostUncheckedUpdateWithoutAuthorInput {
  id: IntFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  comments: CommentUncheckedUpdateManyWithoutPostInput
}

input PostUncheckedUpdateManyWithoutPostsInput {
  id: IntFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUpdateWithoutAuthorInput {
  contain: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  post: PostUpdateOneRequiredWithoutCommentsInput
}

input CommentUncheckedUpdateWithoutAuthorInput {
  id: IntFieldUpdateOperationsInput
  contain: StringFieldUpdateOperationsInput
  postId: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUncheckedUpdateManyWithoutCommentsInput {
  id: IntFieldUpdateOperationsInput
  contain: StringFieldUpdateOperationsInput
  postId: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUpdateWithoutPostInput {
  contain: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  author: UserUpdateOneWithoutCommentsInput
}

input CommentUncheckedUpdateWithoutPostInput {
  id: IntFieldUpdateOperationsInput
  contain: StringFieldUpdateOperationsInput
  authorId: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateWithoutGroupInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  posts: PostUpdateManyWithoutAuthorInput
  comments: CommentUpdateManyWithoutAuthorInput
}

input UserUncheckedUpdateWithoutGroupInput {
  id: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  posts: PostUncheckedUpdateManyWithoutAuthorInput
  comments: CommentUncheckedUpdateManyWithoutAuthorInput
}

input UserUncheckedUpdateManyWithoutUsersInput {
  id: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
}

type AggregateUser {
  count: UserCountAggregateOutputType
  avg: UserAvgAggregateOutputType
  sum: UserSumAggregateOutputType
  min: UserMinAggregateOutputType
  max: UserMaxAggregateOutputType
}

type AggregatePost {
  count: PostCountAggregateOutputType
  avg: PostAvgAggregateOutputType
  sum: PostSumAggregateOutputType
  min: PostMinAggregateOutputType
  max: PostMaxAggregateOutputType
}

type AggregateComment {
  count: CommentCountAggregateOutputType
  avg: CommentAvgAggregateOutputType
  sum: CommentSumAggregateOutputType
  min: CommentMinAggregateOutputType
  max: CommentMaxAggregateOutputType
}

type AggregateGroup {
  count: GroupCountAggregateOutputType
  avg: GroupAvgAggregateOutputType
  sum: GroupSumAggregateOutputType
  min: GroupMinAggregateOutputType
  max: GroupMaxAggregateOutputType
}

type UserCountAggregateOutputType {
  id: Int!
  createdAt: Int
  email: Int
  name: Int
  password: Int
  groupId: Int
  _all: Int!
}

type UserAvgAggregateOutputType {
  id: Float!
  groupId: Float
}

type UserSumAggregateOutputType {
  id: Int!
  groupId: Int
}

type UserMinAggregateOutputType {
  id: Int!
  createdAt: DateTime
  email: String
  name: String
  password: String
  groupId: Int
}

type UserMaxAggregateOutputType {
  id: Int!
  createdAt: DateTime
  email: String
  name: String
  password: String
  groupId: Int
}

type PostCountAggregateOutputType {
  id: Int!
  published: Int
  title: Int
  authorId: Int
  createdAt: Int
  updatedAt: Int
  _all: Int!
}

type PostAvgAggregateOutputType {
  id: Float!
  authorId: Float
}

type PostSumAggregateOutputType {
  id: Int!
  authorId: Int
}

type PostMinAggregateOutputType {
  id: Int!
  published: Boolean
  title: String
  authorId: Int
  createdAt: DateTime
  updatedAt: DateTime
}

type PostMaxAggregateOutputType {
  id: Int!
  published: Boolean
  title: String
  authorId: Int
  createdAt: DateTime
  updatedAt: DateTime
}

type CommentCountAggregateOutputType {
  id: Int!
  contain: Int
  postId: Int!
  authorId: Int
  createdAt: Int
  updatedAt: Int
  _all: Int!
}

type CommentAvgAggregateOutputType {
  id: Float!
  postId: Float!
  authorId: Float
}

type CommentSumAggregateOutputType {
  id: Int!
  postId: Int!
  authorId: Int
}

type CommentMinAggregateOutputType {
  id: Int!
  contain: String
  postId: Int!
  authorId: Int
  createdAt: DateTime
  updatedAt: DateTime
}

type CommentMaxAggregateOutputType {
  id: Int!
  contain: String
  postId: Int!
  authorId: Int
  createdAt: DateTime
  updatedAt: DateTime
}

type GroupCountAggregateOutputType {
  id: Int!
  name: Int
  createdAt: Int
  updatedAt: Int
  _all: Int!
}

type GroupAvgAggregateOutputType {
  id: Float!
}

type GroupSumAggregateOutputType {
  id: Int!
}

type GroupMinAggregateOutputType {
  id: Int!
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

type GroupMaxAggregateOutputType {
  id: Int!
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

type User {
  id: Int!
  createdAt: DateTime!
  email: String!
  name: String
  password: String!
  posts(where: PostWhereInput, orderBy: PostOrderByInput, cursor: PostWhereUniqueInput, take: Int, skip: Int, distinct: PostScalarFieldEnum): [Post!]!
  group: Group
  groupId: Int
  comments(where: CommentWhereInput, orderBy: CommentOrderByInput, cursor: CommentWhereUniqueInput, take: Int, skip: Int, distinct: CommentScalarFieldEnum): [Comment!]!
}

type Query {
  findUniqueUser(where: UserWhereUniqueInput!): User
  findFirstUser(where: UserWhereInput, orderBy: [UserOrderByInput!], cursor: UserWhereUniqueInput, distinct: UserScalarFieldEnum, skip: Int, take: Int): User
  findManyUser(where: UserWhereInput, orderBy: [UserOrderByInput!], cursor: UserWhereUniqueInput, distinct: UserScalarFieldEnum, skip: Int, take: Int): [User!]
  findManyUserCount(where: UserWhereInput, orderBy: [UserOrderByInput!], cursor: UserWhereUniqueInput, distinct: UserScalarFieldEnum, skip: Int, take: Int): Int!
  aggregateUser(where: UserWhereInput, orderBy: [UserOrderByInput!], cursor: UserWhereUniqueInput, distinct: UserScalarFieldEnum, skip: Int, take: Int): AggregateUser
  findUniquePost(where: PostWhereUniqueInput!): Post
  findFirstPost(where: PostWhereInput, orderBy: [PostOrderByInput!], cursor: PostWhereUniqueInput, distinct: PostScalarFieldEnum, skip: Int, take: Int): Post
  findManyPost(where: PostWhereInput, orderBy: [PostOrderByInput!], cursor: PostWhereUniqueInput, distinct: PostScalarFieldEnum, skip: Int, take: Int): [Post!]
  findManyPostCount(where: PostWhereInput, orderBy: [PostOrderByInput!], cursor: PostWhereUniqueInput, distinct: PostScalarFieldEnum, skip: Int, take: Int): Int!
  aggregatePost(where: PostWhereInput, orderBy: [PostOrderByInput!], cursor: PostWhereUniqueInput, distinct: PostScalarFieldEnum, skip: Int, take: Int): AggregatePost
  findUniqueComment(where: CommentWhereUniqueInput!): Comment
  findFirstComment(where: CommentWhereInput, orderBy: [CommentOrderByInput!], cursor: CommentWhereUniqueInput, distinct: CommentScalarFieldEnum, skip: Int, take: Int): Comment
  findManyComment(where: CommentWhereInput, orderBy: [CommentOrderByInput!], cursor: CommentWhereUniqueInput, distinct: CommentScalarFieldEnum, skip: Int, take: Int): [Comment!]
  findManyCommentCount(where: CommentWhereInput, orderBy: [CommentOrderByInput!], cursor: CommentWhereUniqueInput, distinct: CommentScalarFieldEnum, skip: Int, take: Int): Int!
  aggregateComment(where: CommentWhereInput, orderBy: [CommentOrderByInput!], cursor: CommentWhereUniqueInput, distinct: CommentScalarFieldEnum, skip: Int, take: Int): AggregateComment
  findUniqueGroup(where: GroupWhereUniqueInput!): Group
  findFirstGroup(where: GroupWhereInput, orderBy: [GroupOrderByInput!], cursor: GroupWhereUniqueInput, distinct: GroupScalarFieldEnum, skip: Int, take: Int): Group
  findManyGroup(where: GroupWhereInput, orderBy: [GroupOrderByInput!], cursor: GroupWhereUniqueInput, distinct: GroupScalarFieldEnum, skip: Int, take: Int): [Group!]
  findManyGroupCount(where: GroupWhereInput, orderBy: [GroupOrderByInput!], cursor: GroupWhereUniqueInput, distinct: GroupScalarFieldEnum, skip: Int, take: Int): Int!
  aggregateGroup(where: GroupWhereInput, orderBy: [GroupOrderByInput!], cursor: GroupWhereUniqueInput, distinct: GroupScalarFieldEnum, skip: Int, take: Int): AggregateGroup
}

type Mutation {
  createOneUser(data: UserCreateInput!): User!
  updateOneUser(where: UserWhereUniqueInput!, data: UserUpdateInput!): User!
  deleteOneUser(where: UserWhereUniqueInput!): User
  upsertOneUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User
  deleteManyUser(where: UserWhereInput): BatchPayload
  updateManyUser(where: UserWhereInput, data: UserUpdateManyMutationInput): BatchPayload
  createOnePost(data: PostCreateInput!): Post!
  updateOnePost(where: PostWhereUniqueInput!, data: PostUpdateInput!): Post!
  deleteOnePost(where: PostWhereUniqueInput!): Post
  upsertOnePost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post
  deleteManyPost(where: PostWhereInput): BatchPayload
  updateManyPost(where: PostWhereInput, data: PostUpdateManyMutationInput): BatchPayload
  createOneComment(data: CommentCreateInput!): Comment!
  updateOneComment(where: CommentWhereUniqueInput!, data: CommentUpdateInput!): Comment!
  deleteOneComment(where: CommentWhereUniqueInput!): Comment
  upsertOneComment(where: CommentWhereUniqueInput!, create: CommentCreateInput!, update: CommentUpdateInput!): Comment
  deleteManyComment(where: CommentWhereInput): BatchPayload
  updateManyComment(where: CommentWhereInput, data: CommentUpdateManyMutationInput): BatchPayload
  createOneGroup(data: GroupCreateInput!): Group!
  updateOneGroup(where: GroupWhereUniqueInput!, data: GroupUpdateInput!): Group!
  deleteOneGroup(where: GroupWhereUniqueInput!): Group
  upsertOneGroup(where: GroupWhereUniqueInput!, create: GroupCreateInput!, update: GroupUpdateInput!): Group
  deleteManyGroup(where: GroupWhereInput): BatchPayload
  updateManyGroup(where: GroupWhereInput, data: GroupUpdateManyMutationInput): BatchPayload
}

type Post {
  id: Int!
  published: Boolean!
  title: String!
  author: User
  authorId: Int
  comments(where: CommentWhereInput, orderBy: CommentOrderByInput, cursor: CommentWhereUniqueInput, take: Int, skip: Int, distinct: CommentScalarFieldEnum): [Comment!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Comment {
  id: Int!
  contain: String!
  post: Post!
  postId: Int!
  author: User
  authorId: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Group {
  id: Int!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  users(where: UserWhereInput, orderBy: UserOrderByInput, cursor: UserWhereUniqueInput, take: Int, skip: Int, distinct: UserScalarFieldEnum): [User!]!
}
